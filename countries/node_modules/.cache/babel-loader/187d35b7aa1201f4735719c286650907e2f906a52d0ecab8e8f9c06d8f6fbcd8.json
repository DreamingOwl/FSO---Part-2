{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\FSO - Part 2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountryDetail from './Components/CountryDetail';\nimport Notification from './Components/Notification';\nimport Loading from './Components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountriesList = _ref => {\n  let {\n    countries,\n    setCountryFunc\n  } = _ref;\n  return countries.map(country => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 104\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCountryFunc(country),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 138\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 134\n    }, this)]\n  }, country.cca3, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 81\n  }, this));\n};\n_c = CountriesList;\nfunction App() {\n  _s();\n  const [allCountries, setAllCountries] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [searchCountry, setSearchCountry] = useState('');\n  const [countryDetail, setCountryDetail] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(response => {\n      setAllCountries(response.data);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    const api_key = process.env.REACT_APP_API_KEY;\n    if (countryDetail) {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${countryDetail.capitalInfo.latlng[0]}&lon=${countryDetail.capitalInfo.latlng[0]}&appid=${api_key}&units=metric`).then(response => {\n        setWeatherData(response.data);\n      });\n    } else {\n      setWeatherData(null);\n    }\n  }, [countryDetail]);\n  const setOverallState = _ref2 => {\n    let {\n      m,\n      c,\n      cd\n    } = _ref2;\n    setMessage(m);\n    setCountries(c);\n    setCountryDetail(cd);\n  };\n  const onCountryChange = event => {\n    const searchCountry = event.target.value;\n    const showCountries = allCountries.filter(country => country.name.common.toUpperCase().search(searchCountry.toUpperCase()) === -1 ? false : true);\n    setSearchCountry(event.target.value);\n    console.log(searchCountry);\n    if (searchCountry === '') {\n      console.log('1');\n      setOverallState(null, [], null);\n      //setMessage(null)\n      //setCountries([])\n      //setCountryDetail(null)\n    } else {\n      console.log('2');\n      if (showCountries.length === 0) {\n        console.log('3');\n        setOverallState(null, [], null);\n        //setMessage(null)\n        //setCountries([])\n        //setCountryDetail(null)\n      } else if (showCountries.length > 10) {\n        console.log('4');\n        setOverallState('too many matches, specify another filter', [], null);\n        //setMessage('too many matches, specify another filter')\n        //setCountries([])\n        //setCountryDetail(null)\n      } else if (showCountries.length === 1) {\n        console.log('5');\n        setOverallState(null, [], showCountries.reduce((prev, curr) => curr, {}));\n        //setMessage(null)\n        //setCountries([])\n        //setCountryDetail(showCountries.reduce((prev, curr) => curr, {} ))\n      } else {\n        console.log('6');\n        setOverallState(null, showCountries, null);\n        //setMessage(null)\n        // setCountries(showCountries)\n        //setCountryDetail(null)   \n      }\n    }\n  };\n\n  const handleSetCountry = country => {\n    setOverallState(null, [], country);\n    //setMessage(null)\n    //setCountries([])\n    //setCountryDetail(country)\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchCountry,\n      onChange: onCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountryDetail, {\n      country: countryDetail,\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(CountriesList, {\n          countries: countries,\n          setCountryFunc: handleSetCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"58vzrSrkIwBZTuRK1v5b4VCTVng=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CountriesList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","CountryDetail","Notification","Loading","jsxDEV","_jsxDEV","CountriesList","_ref","countries","setCountryFunc","map","country","children","name","common","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cca3","_c","App","_s","allCountries","setAllCountries","setCountries","searchCountry","setSearchCountry","countryDetail","setCountryDetail","weatherData","setWeatherData","message","setMessage","loading","setLoading","get","then","response","data","api_key","process","env","REACT_APP_API_KEY","capitalInfo","latlng","setOverallState","_ref2","m","c","cd","onCountryChange","event","target","value","showCountries","filter","toUpperCase","search","console","log","length","reduce","prev","curr","handleSetCountry","onChange","_c2","$RefreshReg$"],"sources":["E:/React/FSO - Part 2/countries/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport CountryDetail from './Components/CountryDetail'\nimport Notification from './Components/Notification'\nimport Loading from './Components/Loading'\n\nconst CountriesList = ({countries, setCountryFunc}) => countries.map(country => <tr key={country.cca3}><td>{country.name.common}</td><td><button onClick={() => setCountryFunc(country)}>show</button></td></tr>)\n\nfunction App() {\n\n  const [allCountries, setAllCountries] = useState([])\n  const [countries, setCountries] = useState([])\n  const [searchCountry, setSearchCountry] = useState('')\n  const [countryDetail, setCountryDetail] = useState(null)\n  const [weatherData, setWeatherData] = useState(null)\n  const [message, setMessage] = useState(null)\n  const [loading, setLoading] = useState(true)\n  \n  useEffect(() => {\n    axios\n        .get(`https://restcountries.com/v3.1/all`)\n        .then(response => { \n          setAllCountries (response.data)\n          setLoading(false)\n         } )\n  }, [])\n\n  useEffect(() => {\n    const api_key = process.env.REACT_APP_API_KEY\n    if(countryDetail){\n      axios\n          .get(`https://api.openweathermap.org/data/2.5/weather?lat=${countryDetail.capitalInfo.latlng[0]}&lon=${countryDetail.capitalInfo.latlng[0]}&appid=${api_key}&units=metric`)\n          .then(response => { setWeatherData (response.data) } )\n    }\n    else{\n      setWeatherData(null)\n    }\n  }, [countryDetail])\n\n  const setOverallState = ({m, c, cd}) => {\n    setMessage(m)\n    setCountries(c)\n    setCountryDetail(cd)\n  }\n\n  const onCountryChange = (event) => {\n    const searchCountry = event.target.value\n    const showCountries = allCountries.filter( country => country.name.common.toUpperCase().search(searchCountry.toUpperCase()) === -1 ? false : true )\n    setSearchCountry(event.target.value)\n    console.log(searchCountry)\n    if(searchCountry === ''){\n      console.log('1')\n      setOverallState(null,[],null)\n      //setMessage(null)\n      //setCountries([])\n      //setCountryDetail(null)\n    }\n    else{\n      console.log('2')\n      if(showCountries.length === 0){\n        console.log('3')\n        setOverallState(null,[],null)\n        //setMessage(null)\n        //setCountries([])\n        //setCountryDetail(null)\n      }\n      else if(showCountries.length > 10){\n        console.log('4')\n        setOverallState('too many matches, specify another filter',[],null)\n        //setMessage('too many matches, specify another filter')\n        //setCountries([])\n        //setCountryDetail(null)\n      }\n      else if(showCountries.length === 1){\n        console.log('5')\n        setOverallState(null,[],showCountries.reduce((prev, curr) => curr, {} ))\n        //setMessage(null)\n        //setCountries([])\n        //setCountryDetail(showCountries.reduce((prev, curr) => curr, {} ))\n      }\n      else{\n        console.log('6')\n        setOverallState(null,showCountries,null)\n        //setMessage(null)\n       // setCountries(showCountries)\n        //setCountryDetail(null)   \n      }\n    }\n    \n  }\n\n  const handleSetCountry = (country) => {\n    setOverallState(null,[],country)\n    //setMessage(null)\n    //setCountries([])\n    //setCountryDetail(country)\n    \n  }\n\n  if(loading){\n    return (\n      <Loading />\n    )\n  }\n\n  return (\n    <div>\n      find countries <input value={searchCountry} onChange={onCountryChange} /> <br />\n      <Notification message={message} />\n      <CountryDetail country={countryDetail} weatherData={weatherData} />\n      <table>\n        <tbody>\n          <CountriesList countries={countries} setCountryFunc={handleSetCountry}/>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}